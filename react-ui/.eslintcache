[{"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\index.js":"1","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\App.js":"2","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\reportWebVitals.js":"3","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Header\\Header.js":"4","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\Content.js":"5","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Container.js":"6","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Sidebar.js":"7","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Home.js":"8","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Users\\Users.js":"9","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Payments\\Payments.js":"10","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Services\\Services.js":"11","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Services\\ServiceDetails.js":"12","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Users\\UserDetails.js":"13","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Payments\\PaymentDetails.js":"14","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\Card.js":"15","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\System\\Upload.js":"16","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\System\\Files.js":"17","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\constants\\daterangepicker.js":"18","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\DateRangePicker.js":"19","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\api.js":"20","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\BackButton.js":"21","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\LoadingIndicator.js":"22","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\order.js":"23","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\service.js":"24","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\payment.js":"25","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\user.js":"26"},{"size":456,"mtime":1607981159914,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1608017154857,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1607253900606,"results":"30","hashOfConfig":"28"},{"size":6095,"mtime":1611083931423,"results":"31","hashOfConfig":"28"},{"size":469,"mtime":1607253900502,"results":"32","hashOfConfig":"28"},{"size":1038,"mtime":1607780407688,"results":"33","hashOfConfig":"28"},{"size":5015,"mtime":1607780040085,"results":"34","hashOfConfig":"28"},{"size":14576,"mtime":1608124449030,"results":"35","hashOfConfig":"28"},{"size":3597,"mtime":1611088424249,"results":"36","hashOfConfig":"28"},{"size":3613,"mtime":1611081321474,"results":"37","hashOfConfig":"28"},{"size":2787,"mtime":1611081219828,"results":"38","hashOfConfig":"28"},{"size":6798,"mtime":1611088493737,"results":"39","hashOfConfig":"28"},{"size":11422,"mtime":1611080844696,"results":"40","hashOfConfig":"28"},{"size":10703,"mtime":1611081349301,"results":"41","hashOfConfig":"28"},{"size":712,"mtime":1607364799821,"results":"42","hashOfConfig":"28"},{"size":6226,"mtime":1611441504919,"results":"43","hashOfConfig":"28"},{"size":2368,"mtime":1611080768414,"results":"44","hashOfConfig":"28"},{"size":338,"mtime":1607972620777,"results":"45","hashOfConfig":"28"},{"size":757,"mtime":1610895723073,"results":"46","hashOfConfig":"28"},{"size":451,"mtime":1610895071949,"results":"47","hashOfConfig":"28"},{"size":619,"mtime":1611079090595,"results":"48","hashOfConfig":"28"},{"size":494,"mtime":1611079304750,"results":"49","hashOfConfig":"28"},{"size":867,"mtime":1611438469198,"results":"50","hashOfConfig":"28"},{"size":178,"mtime":1611438887155,"results":"51","hashOfConfig":"28"},{"size":666,"mtime":1611440373993,"results":"52","hashOfConfig":"28"},{"size":696,"mtime":1611440449785,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ccl8qq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\index.js",[],["120","121"],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\App.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\reportWebVitals.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Header\\Header.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\Content.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Container.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Sidebar.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Home.js",["122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, {useEffect, useState} from 'react';\r\nimport {Spinner} from 'react-bootstrap';\r\nimport Datatable from 'react-data-table-component'\r\nimport Axios from 'axios';\r\n\r\nconst Home = () => {\r\n    console.log('Rendering => Home');\r\n    const [loading, setLoading] = useState(true);\r\n    const [userSpents, setUserSpents] = useState([]);\r\n    const getUsersSpents = async () => {\r\n        // const getUsersSpentsResponse = await Axios.get('./data/users/userSpents.json');\r\n        // console.log(getUsersSpentsResponse.data);\r\n        // // setLoading(false);\r\n        // setUserSpents(getUsersSpentsResponse.data);\r\n    }\r\n\r\n    const columns = React.useMemo(() => [\r\n        {\r\n          name: 'Ad',\r\n          selector: 'user',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Harcama',\r\n          selector: 'spent',\r\n          sortable: true\r\n        },\r\n        {\r\n          name: 'Harcama',\r\n          selector: 'quantity',\r\n          sortable: true,\r\n        },\r\n      ], []);\r\n\r\n    useEffect (() => {\r\n        setLoading(true);\r\n        const getter = async () => {\r\n            await getUsersSpents();\r\n            setLoading(false);\r\n        }\r\n        getter();\r\n    }, []) ;\r\n\r\n    \r\n    if(loading) {\r\n        return <div className=\"d-flex align-items-center w-100 justify-content-center mt-auto\" style={{height: '100%'}}>\r\n            <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n            <h3 className=\"ml-2\">Loading</h3>\r\n        </div>\r\n    }\r\n    return (\r\n        \r\n        <div>\r\n            <div class=\"app-page-title\">\r\n                <div class=\"page-title-wrapper\">\r\n                    <div class=\"page-title-heading\">\r\n                        <div class=\"page-title-icon\">\r\n                            <i class=\"pe-7s-car icon-gradient bg-mean-fruit\">\r\n                            </i>\r\n                        </div>\r\n                        <div>Analytics Dashboard\r\n                            <div class=\"page-title-subheading\">This is an example dashboard created using\r\n                                build-in elements and components.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"page-title-actions\">\r\n                        <button type=\"button\" data-toggle=\"tooltip\" title=\"Example Tooltip\"\r\n                            data-placement=\"bottom\" class=\"btn-shadow mr-3 btn btn-dark\">\r\n                            <i class=\"fa fa-star\"></i>\r\n                        </button>\r\n                        <div class=\"d-inline-block dropdown\">\r\n                            <button type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\" class=\"btn-shadow dropdown-toggle btn btn-info\">\r\n                                <span class=\"btn-icon-wrapper pr-2 opacity-7\">\r\n                                    <i class=\"fa fa-business-time fa-w-20\"></i>\r\n                                </span>\r\n                                Buttons\r\n                            </button>\r\n                            <div tabindex=\"-1\" role=\"menu\" aria-hidden=\"true\"\r\n                                class=\"dropdown-menu dropdown-menu-right\">\r\n                                <ul class=\"nav flex-column\">\r\n                                    <li class=\"nav-item\">\r\n                                        <a href=\"javascript:void(0);\" class=\"nav-link\">\r\n                                            <i class=\"nav-link-icon lnr-inbox\"></i>\r\n                                            <span>\r\n                                                Inbox\r\n                                            </span>\r\n                                            <div class=\"ml-auto badge badge-pill badge-secondary\">86</div>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a href=\"javascript:void(0);\" class=\"nav-link\">\r\n                                            <i class=\"nav-link-icon lnr-book\"></i>\r\n                                            <span>\r\n                                                Book\r\n                                            </span>\r\n                                            <div class=\"ml-auto badge badge-pill badge-danger\">5</div>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a href=\"javascript:void(0);\" class=\"nav-link\">\r\n                                            <i class=\"nav-link-icon lnr-picture\"></i>\r\n                                            <span>\r\n                                                Picture\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a disabled href=\"javascript:void(0);\" class=\"nav-link disabled\">\r\n                                            <i class=\"nav-link-icon lnr-file-empty\"></i>\r\n                                            <span>\r\n                                                File Disabled\r\n                                            </span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content bg-midnight-bloom\">\r\n                        <div class=\"widget-content-wrapper text-white\">\r\n                            <div class=\"widget-content-left\">\r\n                                <div class=\"widget-heading\">Total Orders</div>\r\n                                <div class=\"widget-subheading\">Last year expenses</div>\r\n                            </div>\r\n                            <div class=\"widget-content-right\">\r\n                                <div class=\"widget-numbers text-white\"><span>1896</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content bg-arielle-smile\">\r\n                        <div class=\"widget-content-wrapper text-white\">\r\n                            <div class=\"widget-content-left\">\r\n                                <div class=\"widget-heading\">Clients</div>\r\n                                <div class=\"widget-subheading\">Total Clients Profit</div>\r\n                            </div>\r\n                            <div class=\"widget-content-right\">\r\n                                <div class=\"widget-numbers text-white\"><span>$ 568</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content bg-grow-early\">\r\n                        <div class=\"widget-content-wrapper text-white\">\r\n                            <div class=\"widget-content-left\">\r\n                                <div class=\"widget-heading\">Followers</div>\r\n                                <div class=\"widget-subheading\">People Interested</div>\r\n                            </div>\r\n                            <div class=\"widget-content-right\">\r\n                                <div class=\"widget-numbers text-white\"><span>46%</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-xl-none d-lg-block col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content bg-premium-dark\">\r\n                        <div class=\"widget-content-wrapper text-white\">\r\n                            <div class=\"widget-content-left\">\r\n                                <div class=\"widget-heading\">Products Sold</div>\r\n                                <div class=\"widget-subheading\">Revenue streams</div>\r\n                            </div>\r\n                            <div class=\"widget-content-right\">\r\n                                <div class=\"widget-numbers text-warning\"><span>$14M</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"mb-3 card\">\r\n                        <div class=\"card-header-tab card-header-tab-animation card-header\">\r\n                            <div class=\"card-header-title\">\r\n                                <i class=\"header-icon lnr-apartment icon-gradient bg-love-kiss\"> </i>\r\n                                Siparişler\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <table id=\"tableOrders\" class=\"table\"></table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"mb-3 card\">\r\n                        <div class=\"card-header-tab card-header-tab-animation card-header\">\r\n                            <div class=\"card-header-title\">\r\n                                <i class=\"header-icon lnr-apartment icon-gradient bg-love-kiss\"> </i>\r\n                                En çok harcama yapan kullanıcılar\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <table id=\"tableSpentMost\" class=\"table\"></table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"mb-3 card\">\r\n                        <div class=\"card-header-tab card-header-tab-animation card-header\">\r\n                            <div class=\"card-header-title\">\r\n                                <i class=\"header-icon lnr-apartment icon-gradient bg-love-kiss\"> </i>\r\n                                En çok kullanılan servisler\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            {/* <Datatable title=\"Movie List\"\r\n                                columns={columns}\r\n                                data={userSpents}\r\n                                pagination/> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content\">\r\n                        <div class=\"widget-content-outer\">\r\n                            <div class=\"widget-content-wrapper\">\r\n                                <div class=\"widget-content-left\">\r\n                                    <div class=\"widget-heading\">Total Orders</div>\r\n                                    <div class=\"widget-subheading\">Last year expenses</div>\r\n                                </div>\r\n                                <div class=\"widget-content-right\">\r\n                                    <div class=\"widget-numbers text-success\">1896</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content\">\r\n                        <div class=\"widget-content-outer\">\r\n                            <div class=\"widget-content-wrapper\">\r\n                                <div class=\"widget-content-left\">\r\n                                    <div class=\"widget-heading\">Products Sold</div>\r\n                                    <div class=\"widget-subheading\">Revenue streams</div>\r\n                                </div>\r\n                                <div class=\"widget-content-right\">\r\n                                    <div class=\"widget-numbers text-warning\">$3M</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content\">\r\n                        <div class=\"widget-content-outer\">\r\n                            <div class=\"widget-content-wrapper\">\r\n                                <div class=\"widget-content-left\">\r\n                                    <div class=\"widget-heading\">Followers</div>\r\n                                    <div class=\"widget-subheading\">People Interested</div>\r\n                                </div>\r\n                                <div class=\"widget-content-right\">\r\n                                    <div class=\"widget-numbers text-danger\">45,9%</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-xl-none d-lg-block col-md-6 col-xl-4\">\r\n                    <div class=\"card mb-3 widget-content\">\r\n                        <div class=\"widget-content-outer\">\r\n                            <div class=\"widget-content-wrapper\">\r\n                                <div class=\"widget-content-left\">\r\n                                    <div class=\"widget-heading\">Income</div>\r\n                                    <div class=\"widget-subheading\">Expected totals</div>\r\n                                </div>\r\n                                <div class=\"widget-content-right\">\r\n                                    <div class=\"widget-numbers text-focus\">$147</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Users\\Users.js",["135","136","137"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRouteMatch, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Datatable from \"react-data-table-component\";\r\nimport { TagPicker } from \"rsuite\";\r\nimport API from \"../../../../api\";\r\nimport moment from \"moment\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\nconst Users = () => {\r\n  console.log(\"Rendering => Users\");\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [tagValue, setTagValue] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const getUsers = async () => {\r\n    let query = \"/db/users\";\r\n    console.log(tagValue);\r\n    if(tagValue.length > 0)\r\n      query = \"/db/users?\" + tagValue.map(user => `username=${user}&`).join('')\r\n    const getUsersResponse = await API.get(query);\r\n    if(!users.length)\r\n      setUsers(getUsersResponse);\r\n    if(tagValue.length > 0)\r\n      setFilteredUsers(getUsersResponse);\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        name: \"Ad\",\r\n        selector: \"username\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Bakiye\",\r\n        selector: \"balance\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Son Giriş\",\r\n        selector: \"lastauth\",\r\n        sortable: true,\r\n        cell: (row) => moment(row.lastauth).format(\"DD/MM/YYYY\"),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getUsers();\r\n      console.log(filteredUsers);\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, [selectedUser, tagValue]);\r\n\r\n  const onChangeHandler = event => {\r\n    console.log(event);\r\n    setTagValue(event);\r\n  }\r\n\r\n  const Filters = () => (\r\n    <div className=\"d-flex justify-content-end mb-3\">\r\n      <TagPicker data={ users.length ? users.map(user => {\r\n        return {\r\n          label: user.username,\r\n          value: user.username\r\n        }\r\n      }) : []} style={{ width: 300 }} onChange={e=>onChangeHandler(e)} value={tagValue} placeholder='Kullanıcı seç'/>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  {/* <SubHeaderComponent /> */}\r\n                  <Filters />\r\n                  <Datatable\r\n                    title=\"Kullanıcılar\"\r\n                    columns={columns}\r\n                    data={tagValue.length > 0 ? filteredUsers : users}\r\n                    pagination\r\n                    onRowClicked={(event) => {\r\n                      setSelectedUser(event);\r\n                      history.push(`users/${event.id}`);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${path}/:id`}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <UserDetails selectedUser={selectedUser} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Payments\\Payments.js",["138","139","140"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Datatable from \"react-data-table-component\";\r\nimport moment from \"moment\";\r\nimport API from \"../../../../api\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport DateRangePicker from \"../../../UI/DateRangePicker\";\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\n\r\nconst Payments = () => {\r\n  console.log(\"Rendering => Payments\");\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const [pending, setPending] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n  const [selectedPayment, setSelectedPayment] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: moment().subtract(7, \"days\").unix(),\r\n    endDate: moment().unix(),\r\n  });\r\n  const getPayments = async (dateObject) => {\r\n    setPending(true);\r\n    const getPaymentsResponse = await API.get(\r\n      `/db/payments?Created_gte=${dateObject.startDate}&Created_lte=${dateObject.endDate}`\r\n    );\r\n    setPayments(getPaymentsResponse.data);\r\n    setPending(false);\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      name: \"Ad\",\r\n      selector: \"User\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Metod\",\r\n      selector: \"Method\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Tutar\",\r\n      selector: \"Amount\",\r\n      sortable: true,\r\n    },\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(true);\r\n  //   const getter = async () => {\r\n  //     getPayments({\r\n  //       startDate: moment().subtract(7, \"days\").unix(),\r\n  //       endDate: moment().unix(),\r\n  //     });\r\n  //     setLoading(false);\r\n  //   };\r\n  //   getter();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getPayments(selectedDate);\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, [selectedDate]);\r\n\r\n  const Filters = () => (\r\n    <div className=\"d-flex justify-content-end\">\r\n      <DateRangePicker selectedDateHandler={setSelectedDate} selectedDate={selectedDate}/>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator/>;\r\n  }\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <Filters />\r\n                  <Datatable\r\n                    title=\"Ödemeler\"\r\n                    columns={columns}\r\n                    data={payments}\r\n                    pagination\r\n                    onRowClicked={(event) => {\r\n                      setSelectedPayment(event);\r\n                      history.push(`/payments/${event.id}`);\r\n                    }}\r\n                    // subHeader\r\n                    // subHeaderComponent={<Filters />}\r\n                    // progressPending={pending}\r\n                    // progressComponent={<LoadingIndicator />}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${path}/:id`}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <PaymentDetails selectedPayment={selectedPayment} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Services\\Services.js",["141","142"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Datatable from \"react-data-table-component\";\r\nimport API from \"../../../../api\";\r\nimport ServiceDetails from \"./ServiceDetails\";\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\nconst Services = () => {\r\n  console.log(\"Rendering => Services\");\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const [services, setServices] = useState([]);\r\n  const [selectedService, setSelectedService] = useState(\"\");\r\n  const getServices = async () => {\r\n    const getServicesResponse = await API.get(`/db/services`);\r\n    console.log(getServicesResponse);\r\n    setServices(getServicesResponse);\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n      width: \"80px\",\r\n    },\r\n    {\r\n      name: \"Servis Adı\",\r\n      selector: \"name\",\r\n      sortable: true,\r\n      cell: row => {\r\n      return <div data-tag=\"allowRowEvents\">{row.name}</div>\r\n      }\r\n    },\r\n    {\r\n      name: \"Sağlayıcı\",\r\n      selector: \"provider\",\r\n      sortable: true,\r\n      maxWidth: '250px'\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getServices();\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <Datatable\r\n                    title=\"Servisler\"\r\n                    columns={columns}\r\n                    data={services}\r\n                    pagination\r\n                    responsive={true}\r\n                    striped={true}\r\n                    highlightOnHover={true}\r\n                    pointerOnHover={true}\r\n                    onRowClicked={(event) => {\r\n                      setSelectedService(event);\r\n                      history.push(`/services/${event.id}`);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${path}/:id`}>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <ServiceDetails selectedService={selectedService} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Services\\ServiceDetails.js",["143","144","145","146","147","148","149"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport API from \"../../../../api\";\r\n// import Chart from \"react-apexcharts\";\r\n// import ApexCharts from 'apexcharts';\r\nimport Datatable from \"react-data-table-component\";\r\nimport Card from '../../../UI/Card';\r\nimport DateRangePicker from '../../../UI/DateRangePicker';\r\nimport BackButton from '../../../UI/BackButton';\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\nconst ServiceDetails = (props) => {\r\n  console.log(\"Rendering => PaymentDetails\");\r\n  let history = useHistory();\r\n  let { selectedService } = props;\r\n  let { id } = useParams();\r\n\r\n  const [allOrdersOfService, setAllOrdersOfService] = useState([]);\r\n  const [allUsersOfService, setAllUsersOfService] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [serviceDetails, setServiceDetails] = useState();\r\n  const [filteredAllOrdersOfService, setFilteredAllOrdersOfService] = useState([]);\r\n  console.log(selectedService);\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: moment().subtract(7, \"days\").unix(),\r\n    endDate: moment().unix(),\r\n  });\r\n\r\n  console.log(selectedDate);\r\n\r\n  const getOrders = async () => {\r\n    const tempOrders = [];\r\n    const getOrdersResponse = await API.get(`/db/orders?service_id=${id}&created_gte=${selectedDate.startDate}&created_lte=${selectedDate.endDate}`);\r\n    tempOrders.push(...getOrdersResponse);\r\n    if (!selectedService) {\r\n      const getServideDetails = await API.get(`/db/services/${id}`);\r\n      selectedService = getServideDetails;\r\n    }\r\n    const tempAllOrdersOfService = tempOrders.filter((v,i,a)=>a.findIndex(t=>(t.id === v.id))===i);\r\n    setAllOrdersOfService(tempAllOrdersOfService);\r\n\r\n    setOrders(tempAllOrdersOfService);\r\n  };\r\n\r\n  const setOrders = (orders) => {\r\n    \r\n    setFilteredAllOrdersOfService(orders);\r\n    let tempUsersOfService = [];\r\n    // console.log(tempAllOrdersOfService);\r\n    const tempServiceDetails = {\r\n        quantity: 0,\r\n        amount: 0\r\n    }\r\n    orders.forEach(order => {\r\n        // console.log(order);\r\n        const userOrderIndex = tempUsersOfService.findIndex(user => user.user === order.user);\r\n        tempServiceDetails.quantity += 1;\r\n        tempServiceDetails.amount += Number(order.charge);\r\n        if( userOrderIndex == -1) {\r\n            tempUsersOfService.push({\r\n                user: order.user,\r\n                quantity: 1,\r\n                amount: Number(order.charge)\r\n            })\r\n        } else {\r\n            tempUsersOfService[userOrderIndex].quantity += 1;\r\n            tempUsersOfService[userOrderIndex].amount += Number(order.charge);\r\n        }\r\n    });\r\n    setAllUsersOfService(tempUsersOfService);\r\n    setServiceDetails(tempServiceDetails);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(true);\r\n  //   const getter = async () => {\r\n  //     await getOrders();\r\n  //     initDatatables();\r\n  //     setLoading(false);\r\n  //   };\r\n  //   getter();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getOrders();\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, [selectedDate]);\r\n\r\n  // useEffect(() => {\r\n  //   const tempArray = allOrdersOfService.filter(order => \r\n  //     moment(order.created).isBetween(moment(selectedDate[0].startDate), moment(selectedDate[0].endDate))\r\n  //   )\r\n  //   console.log(allOrdersOfService);\r\n  //   console.log(tempArray);\r\n  //   setOrders(tempArray);\r\n  //   // setTotalPaymentDetails(tempTotalPaymentObject);\r\n  //   // // const filteredPaymentsByDate = userPayments.filter(payment =>\r\n  //   // //     moment(payment.Created).isBetween(moment(selectedDate[0].startDate), moment(selectedDate[0].endDate), null, \"(]\")\r\n  //   // // );\r\n  //   // // setUserPayments(filteredPaymentsByDate)\r\n  //   // // console.log(filteredPaymentsByDate);\r\n  //   // setUserPayments(tempArray)\r\n  // }, [selectedDate]);\r\n\r\n  const Filters = () => (\r\n    <div className=\"d-flex justify-content-end mb-3\">\r\n      <DateRangePicker\r\n        selectedDateHandler={setSelectedDate}\r\n        selectedDate={selectedDate}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const columnsForOrders = React.useMemo(() => [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n      maxWidth: \"120px\",\r\n    },\r\n    {\r\n      name: \"Kullanıcı\",\r\n      selector: \"name\",\r\n      sortable: true,\r\n      cell: (row) => {\r\n        return <div>{row.user}</div>;\r\n      },\r\n    },\r\n    {\r\n        name: \"Link\",\r\n        selector: \"link\",\r\n        sortable: true,\r\n        cell: (row) => {\r\n          return <a href={row.link}>{row.link}</a>;\r\n        },\r\n      },\r\n    {\r\n      name: \"Tarih\",\r\n      selector: \"created\",\r\n      sortable: true,\r\n      cell: (row) => <span>{moment(row.created * 1000).format('DD/MM/YYYY')}</span>\r\n    },\r\n  ]);\r\n\r\n  const columnsForUsers = React.useMemo(() => [\r\n    {\r\n      name: \"Kullanıcı\",\r\n      selector: \"user\",\r\n      sortable: true\r\n    },\r\n    {\r\n        name: \"Toplam Sipariş\",\r\n        selector: \"quantity\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Toplam Tutar\",\r\n        selector: \"amount\",\r\n        sortable: true\r\n      }\r\n  ]);\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      {/* <div>\r\n            <TotalUsagesGraphic />\r\n        </div>\r\n        <div>\r\n            <TotalUsagesTimeAxisGraphic />\r\n        </div> */}\r\n      <div className=\"row mb-3\">\r\n            {serviceDetails.quantity ? \r\n                <div className=\"col-md-6 col-xl-4\">\r\n                    <Card variant=\"bg-midnight-bloom\" details={{number: serviceDetails.quantity, title: 'Bu dönemki toplam sipariş adedi'}} />\r\n                </div>\r\n            : null}\r\n            {serviceDetails.amount ? \r\n                <div className=\"col-md-6 col-xl-4\">\r\n                    <Card variant=\"bg-arielle-smile\" details={{number: serviceDetails.amount.toFixed(2), title: 'Bu dönemki toplam tutar'}} />\r\n                </div>\r\n            : null}\r\n      </div>\r\n      <Filters />\r\n      <div className=\"mb-3\">\r\n        <Datatable\r\n            title={`${selectedService.id} ID'li Servisin Siparişleri`}\r\n            columns={columnsForOrders}\r\n            data={filteredAllOrdersOfService}\r\n            pagination\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <Datatable\r\n            title={`Servisi en çok kullananlar`}\r\n            columns={columnsForUsers}\r\n            data={allUsersOfService}\r\n            pagination\r\n            defaultSortField=\"quantity\"\r\n            defaultSortAsc={false}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceDetails;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Users\\UserDetails.js",["150","151","152","153"],"import React, {useState, useEffect} from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport API from \"../../../../api\";\r\nimport Chart from \"react-apexcharts\";\r\nimport ApexCharts from 'apexcharts';\r\nimport Datatable from \"react-data-table-component\";\r\nimport DateRangePicker from \"../../../UI/DateRangePicker\";\r\nimport BackButton from '../../../UI/BackButton';\r\nimport moment from 'moment';\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\n\r\nconst UserDetails = (props) => {\r\n  console.log(\"Rendering => UserDetails\");\r\n  let { id } = useParams();\r\n  const [selectedUserDetails, setSelectedUserDetails ] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: moment().subtract(7, \"days\").unix(),\r\n    endDate: moment().unix(),\r\n  });\r\n  \r\n  const getUserDetails = async () => {\r\n    const getSelectedUserResponse = await API.get(\r\n        `/db/users/${id}`\r\n    );\r\n    console.log(getSelectedUserResponse);\r\n    \r\n    setSelectedUserDetails(getSelectedUserResponse);\r\n    console.log(selectedUserDetails);\r\n    await getUserPaymentsAndOrders(getSelectedUserResponse);\r\n  }\r\n\r\n  const getUserPaymentsAndOrders = async (user) => {\r\n    // console.log()\r\n    if(user.username) {\r\n      const urls = [`/db/orders?user=${user.username}&created_gte=${selectedDate.startDate}&created_lte=${selectedDate.endDate}`, `/db/payments?User=${user.username}&Created_gte=${selectedDate.startDate}&Created_lte=${selectedDate.endDate}`];\r\n      var promises = urls.map(url => API.get(url));\r\n      const responses = await Promise.all(promises);\r\n      // console.log(responses);\r\n      // const getUserOrders = await Axios.get(`/db/orders?user=${user.username}`);\r\n      // const response = await Promise.all(Axios.get(`/db/orders?user=${user.username}`), Axios.get(`/db/payments?user=${user.username}`));\r\n      // console.log(response);\r\n      const tempUser = {\r\n        spent: 0,\r\n        quantity: 0,\r\n        services: []\r\n      };\r\n      responses[0].forEach((order) => {\r\n        tempUser.spent += Number(order.cost);\r\n        tempUser.quantity += 1;\r\n        const isExistingServiceInUserSpendings = tempUser.services.findIndex(service => service.id == order.service_id)\r\n        if(isExistingServiceInUserSpendings != -1) {\r\n          const updatedServiceSpent = tempUser.services[isExistingServiceInUserSpendings].spent + Number(order.cost)\r\n          tempUser.services[isExistingServiceInUserSpendings].quantity += 1;\r\n          tempUser.services[isExistingServiceInUserSpendings].spent = updatedServiceSpent;\r\n        } else {\r\n          tempUser.services.push({\r\n            id: order.service_id,\r\n            name: order.service_name,\r\n            quantity: 1,\r\n            spent: Number(order.cost)\r\n          })\r\n        }\r\n      })\r\n      setSelectedUserDetails({\r\n        ...user,\r\n        ...tempUser,\r\n        payments: responses[1]\r\n      })\r\n    }\r\n  }\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true);\r\n//     const getter = async () => {\r\n//         await getUserDetails();\r\n//         // await getUserPaymentsAndOrders();\r\n//         setLoading(false);\r\n//     };\r\n//     getter();\r\n//     console.log(selectedUserDetails)\r\n// }, []);\r\n\r\nuseEffect(() => {\r\n  setLoading(true);\r\n  const getter = async () => {\r\n    // setPending(true);\r\n    console.log(selectedUserDetails);\r\n    await getUserDetails();\r\n    setLoading(false);\r\n    // setPending(false);\r\n  }\r\n  getter();\r\n}, [selectedDate]);\r\n  const ChartUsages = () => {\r\n    try {\r\n      if(!selectedUserDetails.services.length) return;\r\n\r\n      const chartUsagesArray = selectedUserDetails.services.sort((service1, service2) =>\r\n        service1.quantity < service2.quantity ? 1 : -1\r\n      );\r\n  \r\n      var optionsChartUsages = {\r\n        chart: {\r\n          width: 200,\r\n          type: \"donut\",\r\n        },\r\n        title: {\r\n          text: \"En çok kullandığı servisler\",\r\n        },\r\n        labels: chartUsagesArray.slice(0, 5).map((service) => service.name),\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n      //   responsive: [\r\n      //     {\r\n      //       breakpoint: 480,\r\n      //       options: {\r\n      //         chart: {\r\n      //           width: \"100%\",\r\n      //           height: 350,\r\n      //         },\r\n      //         legend: {\r\n      //           show: false,\r\n      //         },\r\n      //       },\r\n      //     },\r\n      //   ],\r\n        legend: {\r\n          show: false,\r\n          // position: 'right',\r\n          // offsetY: 0,\r\n          // height: 230,\r\n        },\r\n      };\r\n  \r\n      return (\r\n        <Chart\r\n          series={chartUsagesArray.slice(0, 5).map((service) => service.quantity)}\r\n          options={optionsChartUsages}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n        />\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      return ;\r\n    }\r\n  };\r\n  const ChartSpents = () => {\r\n    try {\r\n      if(!selectedUserDetails.services.length) return;\r\n      \r\n      const chartSpentsArray = selectedUserDetails.services.sort(\r\n        (service1, service2) => (service1.spent < service2.spent ? 1 : -1)\r\n      );\r\n  \r\n      var optionsChartSpents = {\r\n        options: {\r\n          chart: {\r\n            width: 200,\r\n            type: \"donut\",\r\n          }\r\n        },\r\n        title: {\r\n          text: \"En çok harcadığı servisler\",\r\n        },\r\n        labels: chartSpentsArray.slice(0, 5).map((service) => service.name),\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n      //   responsive: [\r\n      //     {\r\n      //       breakpoint: 480,\r\n      //       options: {\r\n      //         chart: {\r\n      //           width: \"100%\",\r\n      //           height: 350,\r\n      //         },\r\n      //         legend: {\r\n      //           show: false,\r\n      //         },\r\n      //       },\r\n      //     },\r\n      //   ],\r\n        legend: {\r\n          show: false,\r\n          // position: 'right',\r\n          // offsetY: 0,\r\n          // height: 230,\r\n        },\r\n      };\r\n  \r\n      return (\r\n        <Chart\r\n          series={chartSpentsArray.slice(0, 5).map((service) => service.spent)}\r\n          options={optionsChartSpents}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n        />\r\n      );\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const ChartTotalUsagesTimeAxis = () => {\r\n    let data = selectedUserDetails.payments.map(payment => {\r\n        return [moment(payment.Created).valueOf(), Number(payment.Amount)]\r\n    }).sort((a,b) => a[0] > b[0] ? 1 : -1);\r\n    console.log(data);\r\n    const [graphicState, setGraphicState] = useState({\r\n        series: [{\r\n            data\r\n        }],\r\n        options: {\r\n            chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 350,\r\n            zoom: {\r\n                autoScaleYaxis: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n            min: moment().subtract(1, 'year').valueOf(),\r\n            tickAmount: 6,\r\n        },\r\n        tooltip: {\r\n            x: {\r\n                show: true,\r\n                format: 'dd MMM',\r\n                formatter: undefined\r\n            },\r\n            y: {\r\n                formatter: undefined,\r\n                title: {\r\n                    text: 'Tutar',\r\n                }\r\n            }\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                shadeIntensity: 1,\r\n                opacityFrom: 0.7,\r\n                opacityTo: 0.9,\r\n                stops: [0, 100]\r\n            }\r\n        },\r\n    },\r\n        selection: 'one_month',\r\n    })\r\n\r\n\r\n  const updateData = (timeline) => {\r\n    setGraphicState({\r\n      selection: timeline\r\n    })\r\n  \r\n    switch (timeline) {\r\n      case 'one_month':\r\n        ApexCharts.exec(\r\n          'area-datetime',\r\n          'zoomX',\r\n          moment().subtract(1, 'month').valueOf(),\r\n          moment().valueOf()\r\n        )\r\n        break\r\n      case 'six_months':\r\n        ApexCharts.exec(\r\n          'area-datetime',\r\n          'zoomX',\r\n          moment().subtract(6, 'month').valueOf(),\r\n          moment().valueOf()\r\n        )\r\n        break\r\n      case 'one_year':\r\n        ApexCharts.exec(\r\n          'area-datetime',\r\n          'zoomX',\r\n          moment().subtract(1, 'year').valueOf(),\r\n          moment().valueOf()\r\n        )\r\n        break\r\n      case 'all':\r\n        ApexCharts.exec(\r\n          'area-datetime',\r\n          'zoomX',\r\n          moment().subtract(2, 'years').valueOf(),\r\n          moment().valueOf()\r\n        )\r\n        break\r\n      default:\r\n    }\r\n  }\r\n    return (\r\n        <div id=\"chart\">\r\n            <div class=\"toolbar\">\r\n                <button id=\"one_month\"\r\n                    onClick={()=>updateData('one_month')} className={ (graphicState.selection==='one_month' ? 'active' : '')}>\r\n                    1 Ay\r\n                </button>\r\n                &nbsp;\r\n                <button id=\"six_months\"\r\n                    onClick={()=>updateData('six_months')} className={ (graphicState.selection==='six_months' ? 'active' : '')}>\r\n                    6 Ay\r\n                </button>\r\n                &nbsp;\r\n                <button id=\"one_year\"\r\n                    onClick={()=>updateData('one_year')} className={ (graphicState.selection==='one_year' ? 'active' : '')}>\r\n                    1 Yıl\r\n                </button>\r\n                &nbsp;\r\n                <button id=\"all\"\r\n                    onClick={()=>updateData('all')} className={ (graphicState.selection==='all' ? 'active' : '')}>\r\n                    Hepsi\r\n                </button>\r\n            </div>\r\n            <div id=\"chart-timeline\">\r\n                <Chart options={graphicState.options} series={graphicState.series} type=\"area\" height={350} />\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  const Filters = () => (\r\n    <div className=\"d-flex justify-content-end mb-3\">\r\n      <DateRangePicker\r\n        selectedDateHandler={setSelectedDate}\r\n        selectedDate={selectedDate}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        name: \"Servis\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        cell: row => <span>{row.name}</span>\r\n      },\r\n      {\r\n        name: \"Harcama\",\r\n        selector: \"spent\",\r\n        sortable: true,\r\n        width: '150px',\r\n        cell: row => <span>{row.spent.toFixed(2)}</span>\r\n      },\r\n      {\r\n        name: \"Harcama\",\r\n        selector: \"quantity\",\r\n        sortable: true,\r\n        width: '150px'\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-lg-6\">{ChartSpents()}</div>\r\n        <div className=\"col-lg-6\">{ChartUsages()}</div>\r\n      </div>\r\n      {/* <div>\r\n        <ChartTotalUsagesTimeAxis />\r\n      </div> */}\r\n      <div className=\"row justify-content-end\">\r\n        <Filters />\r\n      </div>\r\n      <Datatable\r\n        title=\"Harcama yaptığı servisler\"\r\n        columns={columns}\r\n        data={selectedUserDetails.services}\r\n        pagination\r\n        responsive\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\Payments\\PaymentDetails.js",["154","155","156","157","158","159"],"import \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Chart from \"react-apexcharts\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport API from \"../../../../api\";\r\nimport Datatable from \"react-data-table-component\";\r\n\r\nimport Card from \"../../../UI/Card\";\r\nimport DateRangePicker from \"../../../UI/DateRangePicker\";\r\nimport BackButton from \"../../../UI/BackButton\";\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\nconst PaymentDetails = (props) => {\r\n  console.log(\"Rendering => PaymentDetails\");\r\n  const [selectedPayment, setSelectedPayment] = useState(props.selectedPayment);\r\n  let { id } = useParams();\r\n\r\n  const [userPayments, setUserPayments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalPaymentDetails, setTotalPaymentDetails] = useState();\r\n  console.log(selectedPayment);\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: moment().subtract(7, \"days\").unix(),\r\n    endDate: moment().unix(),\r\n  });\r\n\r\n  const getPayments = async () => {\r\n    const tempPayments = [];\r\n\r\n    if (!selectedPayment) {\r\n      const getSelectedPaymentResponse = await API.get(`/db/payments/${id}`);\r\n      if (getSelectedPaymentResponse)\r\n        setSelectedPayment(getSelectedPaymentResponse);\r\n    }\r\n    if(selectedPayment) {\r\n        const getPaymentsResponse = await API.get(\r\n          `/db/payments?User=${selectedPayment.User}&Status=Completed&Created_gte=${selectedDate.startDate}&Created_lte=${selectedDate.endDate}`\r\n        );\r\n\r\n        if (getPaymentsResponse) tempPayments.push(...getPaymentsResponse);\r\n        const tempTotalPaymentObject = {\r\n          totalPayment: 0,\r\n          numberOfPayment: 0,\r\n        };\r\n        tempPayments.forEach((payment) => {\r\n          tempTotalPaymentObject.totalPayment += Number(payment.Amount);\r\n          tempTotalPaymentObject.numberOfPayment++;\r\n        });\r\n\r\n        setUserPayments(tempPayments);\r\n        setTotalPaymentDetails(tempTotalPaymentObject);\r\n    } else {\r\n        throw false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getPayments();\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, [selectedDate, selectedPayment]);\r\n\r\n  const Filters = () => (\r\n    <div className=\"d-flex justify-content-end mb-3\">\r\n      <DateRangePicker\r\n        selectedDateHandler={setSelectedDate}\r\n        selectedDate={selectedDate}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  // const TotalUsagesGraphic = () => {\r\n  //     var options = {\r\n  //         series: [{\r\n  //         name: 'Website Blog',\r\n  //         type: 'column',\r\n  //         data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\r\n  //       }, {\r\n  //         name: 'Social Media',\r\n  //         type: 'line',\r\n  //         data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\r\n  //       }],\r\n  //         chart: {\r\n  //         height: 350,\r\n  //         type: 'line',\r\n  //       },\r\n  //       stroke: {\r\n  //         width: [0, 4]\r\n  //       },\r\n  //       title: {\r\n  //         text: 'Traffic Sources'\r\n  //       },\r\n  //       dataLabels: {\r\n  //         enabled: true,\r\n  //         enabledOnSeries: [1]\r\n  //       },\r\n  //       labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\r\n  //       xaxis: {\r\n  //         type: 'datetime'\r\n  //       },\r\n  //       yaxis: [{\r\n  //         title: {\r\n  //           text: 'Website Blog',\r\n  //         },\r\n\r\n  //       }, {\r\n  //         opposite: true,\r\n  //         title: {\r\n  //           text: 'Social Media'\r\n  //         }\r\n  //       }]\r\n  //       };\r\n  //       return <Chart options={options} series={options.series}/>\r\n  // }\r\n\r\n  // const TotalUsagesTimeAxisGraphic = () => {\r\n  //     let data = userPayments.map(payment => {\r\n  //         return [moment(payment.Created).valueOf(), Number(payment.Amount)]\r\n  //     }).sort((a,b) => a[0] > b[0] ? 1 : -1);\r\n  //     console.log(data);\r\n  //     const [graphicState, setGraphicState] = useState({\r\n  //         series: [{\r\n  //             data\r\n  //         }],\r\n  //         options: {\r\n  //             chart: {\r\n  //             id: 'area-datetime',\r\n  //             type: 'area',\r\n  //             height: 350,\r\n  //             zoom: {\r\n  //                 autoScaleYaxis: true\r\n  //             }\r\n  //         },\r\n  //         dataLabels: {\r\n  //             enabled: false\r\n  //         },\r\n  //         markers: {\r\n  //             size: 0,\r\n  //             style: 'hollow',\r\n  //         },\r\n  //         xaxis: {\r\n  //             type: 'datetime',\r\n  //             min: moment().subtract(1, 'year').valueOf(),\r\n  //             tickAmount: 6,\r\n  //         },\r\n  //         tooltip: {\r\n  //             x: {\r\n  //                 show: true,\r\n  //                 format: 'dd MMM',\r\n  //                 formatter: undefined\r\n  //             },\r\n  //             y: {\r\n  //                 formatter: undefined,\r\n  //                 title: {\r\n  //                     text: 'Tutar',\r\n  //                 }\r\n  //             }\r\n  //         },\r\n  //         fill: {\r\n  //             type: 'gradient',\r\n  //             gradient: {\r\n  //                 shadeIntensity: 1,\r\n  //                 opacityFrom: 0.7,\r\n  //                 opacityTo: 0.9,\r\n  //                 stops: [0, 100]\r\n  //             }\r\n  //         },\r\n  //     },\r\n  //         selection: 'one_month',\r\n  //     })\r\n\r\n  //   const updateData = (timeline) => {\r\n  //     setGraphicState({\r\n  //       selection: timeline\r\n  //     })\r\n\r\n  //     switch (timeline) {\r\n  //       case 'one_month':\r\n  //         ApexCharts.exec(\r\n  //           'area-datetime',\r\n  //           'zoomX',\r\n  //           moment().subtract(1, 'month').valueOf(),\r\n  //           moment().valueOf()\r\n  //         )\r\n  //         break\r\n  //       case 'six_months':\r\n  //         ApexCharts.exec(\r\n  //           'area-datetime',\r\n  //           'zoomX',\r\n  //           moment().subtract(6, 'month').valueOf(),\r\n  //           moment().valueOf()\r\n  //         )\r\n  //         break\r\n  //       case 'one_year':\r\n  //         ApexCharts.exec(\r\n  //           'area-datetime',\r\n  //           'zoomX',\r\n  //           moment().subtract(1, 'year').valueOf(),\r\n  //           moment().valueOf()\r\n  //         )\r\n  //         break\r\n  //       case 'all':\r\n  //         ApexCharts.exec(\r\n  //           'area-datetime',\r\n  //           'zoomX',\r\n  //           moment().subtract(2, 'years').valueOf(),\r\n  //           moment().valueOf()\r\n  //         )\r\n  //         break\r\n  //       default:\r\n  //     }\r\n  //   }\r\n  //     return (\r\n  //         <div id=\"chart\">\r\n  //             <div class=\"toolbar\">\r\n  //                 <button id=\"one_month\"\r\n  //                     onClick={()=>updateData('one_month')} className={ (graphicState.selection==='one_month' ? 'active' : '')}>\r\n  //                     1 Ay\r\n  //                 </button>\r\n  //                 &nbsp;\r\n  //                 <button id=\"six_months\"\r\n  //                     onClick={()=>updateData('six_months')} className={ (graphicState.selection==='six_months' ? 'active' : '')}>\r\n  //                     6 Ay\r\n  //                 </button>\r\n  //                 &nbsp;\r\n  //                 <button id=\"one_year\"\r\n  //                     onClick={()=>updateData('one_year')} className={ (graphicState.selection==='one_year' ? 'active' : '')}>\r\n  //                     1 Yıl\r\n  //                 </button>\r\n  //                 &nbsp;\r\n  //                 <button id=\"all\"\r\n  //                     onClick={()=>updateData('all')} className={ (graphicState.selection==='all' ? 'active' : '')}>\r\n  //                     Hepsi\r\n  //                 </button>\r\n  //             </div>\r\n  //             <div id=\"chart-timeline\">\r\n  //                 <Chart options={graphicState.options} series={graphicState.series} type=\"area\" height={350} />\r\n  //             </div>\r\n  //         </div>\r\n  //     );\r\n  // }\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        name: \"Metod\",\r\n        selector: \"Method\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Tutar\",\r\n        selector: \"Amount\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Tarih\",\r\n        selector: \"Created\",\r\n        sortable: true,\r\n        cell: (row) => moment(row.Created * 1000).format(\"DD/MM/YYYY\"),\r\n      },\r\n      {\r\n        name: \"Durum\",\r\n        selector: \"Status\",\r\n        sortable: true,\r\n        cell: (row) => {\r\n          let statusObject = {};\r\n          if (row.Status == \"Completed\") {\r\n            statusObject.variant = \"success\";\r\n            statusObject.text = \"Tamamlandı\";\r\n          } else if (row.Status == \"Pending\") {\r\n            statusObject.variant = \"warning\";\r\n            statusObject.text = \"Beklemede\";\r\n          }\r\n          return (\r\n            <Badge pill variant={statusObject.variant}>\r\n              {statusObject.text}\r\n            </Badge>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  if (loading) {\r\n    return <LoadingIndicator />\r\n  }\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <Filters />\r\n      {/* <div>\r\n            <TotalUsagesGraphic />\r\n        </div> */}\r\n      {/* <div>\r\n            <TotalUsagesTimeAxisGraphic />\r\n        </div> */}\r\n      <div className=\"row mb-3\">\r\n        {totalPaymentDetails.totalPayment ? (\r\n          <div className=\"col-md-6 col-xl-4\">\r\n            <Card\r\n              variant=\"bg-midnight-bloom\"\r\n              details={{\r\n                number: totalPaymentDetails.totalPayment,\r\n                title: \"Bu dönemki toplam ödeme\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {totalPaymentDetails.numberOfPayment ? (\r\n          <div className=\"col-md-6 col-xl-4\">\r\n            <Card\r\n              variant=\"bg-arielle-smile\"\r\n              details={{\r\n                number: totalPaymentDetails.numberOfPayment,\r\n                title: \"Bu dönemki toplam ödeme sayısı\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <Datatable\r\n        title={`${selectedPayment.User} - Diğer Ödemeler`}\r\n        columns={columns}\r\n        data={userPayments.filter((payment) => payment.visible !== false)}\r\n        pagination\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentDetails;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\Card.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\System\\Upload.js",["160","161","162"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Row, Col, ProgressBar } from \"react-bootstrap\";\r\nimport {Uploader, Alert, Button} from 'rsuite';\r\n\r\nimport Order from '../../../../models/order';\r\nimport Payment from '../../../../models/payment';\r\nimport Service from '../../../../models/service';\r\nimport User from '../../../../models/user';\r\n\r\nconst Upload = () => {\r\n    const [isFileUploading, setIsFileUploading] = useState(false);\r\n    const [fileUploadProgress, setFileUplaodProgress] = useState(0);\r\n  const [formFields, setFormFields] = useState({});\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsFileUploading(true);\r\n    console.log(\"submit\");\r\n    console.log(formFields);\r\n    try {\r\n      if ('BackgroundFetchManager' in window.self) {\r\n        console.log('supported');\r\n      }\r\n        // const config = {\r\n        //     onUploadProgress: function (progressEvent) {\r\n        //         console.log(Math.round((progressEvent.loaded * 100) / progressEvent.total))\r\n        //         setFileUplaodProgress(Math.round((progressEvent.loaded * 100) / progressEvent.total));\r\n        //     }\r\n        // }\r\n        const uploadedJSON = await readFile(formFields.uploadedFile);\r\n        const postURL = `db/${formFields.fileType || \"orders\"}`;\r\n        const promiseArray = [];\r\n        uploadedJSON.map((item, index) => {\r\n          let formattedItem;\r\n          switch (formFields.fileType) {\r\n            case 'orders':\r\n              formattedItem = new Order(...Object.values(item))\r\n              break;\r\n            case 'payments':\r\n                formattedItem = new Payment(...Object.values(item))\r\n                break;\r\n            case 'services':\r\n              formattedItem = new Service(...Object.values(item))\r\n              break;\r\n            case 'users':\r\n                formattedItem = new User(...Object.values(item))\r\n                break;\r\n            default:\r\n              break;\r\n          }\r\n          // console.log(formattedItem)\r\n          promiseArray.push(Axios.post(postURL, formattedItem).then(result => setFileUplaodProgress(Math.round((index/uploadedJSON.length) * 100 ))));\r\n        });\r\n        await Promise.all(promiseArray);\r\n        Axios.post('db/files', {\r\n          name: formFields.uploadedFile.name,\r\n          ext: formFields.uploadedFile.name.split('.').pop(),\r\n          fileType: formFields.fileType,\r\n          created: new Date,\r\n          size: formFields.uploadedFile.size\r\n        });\r\n        Alert.success('Dosya Yükleme başarılı', 5000);\r\n        // await Axios.post(postURL, uploadedJSON[0], {\r\n        //   headers:  { \r\n        //     'Accept': 'application/json',\r\n        //     'Content-Type': 'application/json'\r\n        //   }\r\n        // });\r\n        // const uploadedJSON = \r\n        // const uploadFormData = new FormData();\r\n        // uploadFormData.append(\"file\", formFields.uploadedFile);\r\n        // uploadFormData.append(\"fileType\", formFields.fileType || \"orders\");\r\n        // const uploadFileResponse = await Axios.post(\"upload\", uploadFormData, config);\r\n        // if (uploadFileResponse) {\r\n        //   Alert.success('Dosya Yükleme başarılı', 5000);\r\n        //   // alert(\"successful\");\r\n        // }\r\n    } catch ( error ) {\r\n        console.log(error);\r\n        // Alert.error(`Dosya Yükeleme başarısız. Hata mesajı: ${error.response.data}`, 5000);\r\n    }\r\n\r\n    setIsFileUploading(false);\r\n    setFileUplaodProgress(0);\r\n  };\r\n\r\n  const onFileChange = (files) => {\r\n    const uploadedFile = files[0];\r\n    console.log(files);\r\n    if (uploadedFile) {\r\n      if (uploadedFile.blobFile.type == \"application/json\") {\r\n        setFormFields({\r\n          ...formFields,\r\n          uploadedFile: uploadedFile.blobFile,\r\n        });\r\n      }\r\n    }\r\n    console.log(files);\r\n  };\r\n\r\n  const readFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      var fr = new FileReader();  \r\n      fr.onload = () => {\r\n        try {\r\n          resolve(JSON.parse(fr.result))\r\n        }catch(error) {\r\n          reject(error);\r\n        }\r\n      };\r\n      fr.readAsText(file);\r\n    });\r\n  }\r\n\r\n  const FileProgress = () => {\r\n    return <>\r\n      <ProgressBar now={fileUploadProgress} label={`${fileUploadProgress}%`}/>\r\n      {/* {fileUploadProgress == 100 ? <h5 className=\"text-center my-3\">Dosya karşıya yüklendi. Kontrol ediliyor...</h5> : \"\"} */}\r\n    </>\r\n    \r\n  }\r\n  return (\r\n    <Row className=\"justify-content-center\">\r\n      <Col sm={12} lg={8}>\r\n        <h3>Dosya Yükle</h3>\r\n        <Form onSubmit={(event) => submitHandler(event)}>\r\n          <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n            <Form.Label>Dosya Tipi</Form.Label>\r\n            <Form.Control as=\"select\" custom defaultValue=\"\" onChange={(event) =>\r\n              setFormFields({ ...formFields, fileType: event.target.value })\r\n            }>\r\n            <option disabled value=\"\">\r\n              Dosya tipi seç\r\n            </option>\r\n            <option value=\"orders\">Sipariş</option>\r\n            <option value=\"payments\">Ödeme</option>\r\n            <option value=\"users\">Kullanıcılar</option>\r\n            <option value=\"services\">Servisler</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            onChange={(files) => onFileChange(files)}\r\n            multiple={false}\r\n            accept='application/json'\r\n            // ref={ref => {\r\n            //   this.uploader = ref;\r\n            // }}\r\n          ><Button>Dosya Seç</Button>\r\n          </Uploader>\r\n          {/* <Form.File id=\"custom-file\" label=\"Sadece JSON\" custom name=\"sampleFile\" onChange={(files) => onFileChange(files)}/> */}\r\n            <div className=\"d-flex justify-content-end my-3\">\r\n                <Button appearance=\"primary\" type=\"submit\" loading={isFileUploading}>Yükle</Button>\r\n                {/* <Button variant=\"primary\" type=\"submit\">Yükle</Button> */}\r\n            </div>\r\n            { isFileUploading ? <FileProgress /> : null}\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\Content\\components\\System\\Files.js",["163","164","165","166","167"],"import React, { useEffect, useState } from \"react\";\r\nimport Datatable from \"react-data-table-component\";\r\nimport API from \"../../../../api\";\r\nimport LoadingIndicator from \"../../../UI/LoadingIndicator\";\r\n\r\nconst Files = () => {\r\n  console.log(\"Rendering => Files\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const getFiles = async () => {\r\n    const getFilesResponse = await API.get(`/db/files`);\r\n    setFiles(getFilesResponse);\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n      width: \"80px\",\r\n    },\r\n    {\r\n      name: \"Servis Adı\",\r\n      selector: \"name\",\r\n      sortable: true,\r\n      cell: row => {\r\n      return <div>{row.name}</div>\r\n      }\r\n    },\r\n    {\r\n      name: \"Tür\",\r\n      selector: 'fileType',\r\n      sortable: true,\r\n      maxWidth: '100px',\r\n      cell: row => {\r\n        let content;\r\n        if(row.fileType == 'services')\r\n          content = 'Servis'\r\n        else if(row.fileType == 'users')\r\n          content = 'Kullanıcı'\r\n        else if(row.fileType == 'orders')\r\n          content = 'Sipariş'\r\n        else if(row.fileType == 'payments')\r\n          content = 'Ödeme'\r\n      return <span>{content}</span>\r\n      }\r\n    },\r\n    {\r\n      name: \"Uzantı\",\r\n      selector: \"ext\",\r\n      sortable: true,\r\n      maxWidth: '100px'\r\n    },\r\n    {\r\n      name: \"Yükl. Tarihi\",\r\n      selector: \"created\",\r\n      sortable: true,\r\n      maxWidth: '200px'\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getter = async () => {\r\n      await getFiles();\r\n      setLoading(false);\r\n    };\r\n    getter();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  return (\r\n    <>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"mb-3 card\">\r\n                <div class=\"card-body\">\r\n                  <Datatable\r\n                    title=\"Dosyalar\"\r\n                    columns={columns}\r\n                    data={files}\r\n                    pagination\r\n                    responsive={true}\r\n                    striped={true}\r\n                    highlightOnHover={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\constants\\daterangepicker.js",[],["168","169"],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\DateRangePicker.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\api.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\BackButton.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\components\\UI\\LoadingIndicator.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\order.js",["170"],"import moment from 'moment';\r\n\r\nclass Order {\r\n  constructor(\r\n    id,\r\n    externalId,\r\n    user,\r\n    charge,\r\n    cost,\r\n    link,\r\n    startCount,\r\n    quantity,\r\n    serviceId,\r\n    serviceName,\r\n    status,\r\n    remains,\r\n    created,\r\n    provider,\r\n    mode\r\n  ) {\r\n    this.id = id;\r\n    this.e_id = externalId;\r\n    this.user = user;\r\n    this.charge = Number(charge).round(3);\r\n    this.cost = Number(cost).round(3);\r\n    this.link = link;\r\n    this.st_count = startCount;\r\n    this.qt = quantity;\r\n    this.s_id = serviceId;\r\n    this.s_name = serviceName;\r\n    this.status = status;\r\n    this.remns = remains;\r\n    this.created = moment(created).unix();\r\n    this.prv = provider;\r\n    this.mode = mode;\r\n  }\r\n}\r\n\r\nexport default Order;\r\n\r\nNumber.prototype.round = function (places) {\r\n    return +(Math.round(this + \"e+\" + places) + \"e-\" + places);\r\n};\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\service.js",[],"C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\payment.js",["171"],"import moment from 'moment';\r\n\r\nclass Payment {\r\n  constructor(\r\n    id,\r\n    user,\r\n    balance,\r\n    amount,\r\n    method,\r\n    status,\r\n    created,\r\n    completed,\r\n    ip,\r\n    mode\r\n  ) {\r\n    this.id = id;\r\n    this.user = user;\r\n    this.balance = Number(balance).round(3);\r\n    this.amount = Number(amount).round(3);\r\n    this.method = method;\r\n    this.status = status;\r\n    this.created = moment(created).unix();\r\n    this.completed = moment(completed).unix();\r\n    this.ip = ip;\r\n    this.mode = mode;\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n\r\nNumber.prototype.round = function (places) {\r\n    return +(Math.round(this + \"e+\" + places) + \"e-\" + places);\r\n};\r\n","C:\\Users\\dijvarb.SMARTIKS\\Documents\\myprojects\\mea\\mea-report-react\\react-ui\\src\\models\\user.js",["172"],"import moment from 'moment';\r\n\r\nclass User {\r\n    constructor(\r\n      id,\r\n      username,\r\n      email,\r\n      skype,\r\n      balance,\r\n      spent,\r\n      status,\r\n      created,\r\n      lastAuth\r\n    ) {\r\n        this.id = id;\r\n        this.user = username;\r\n        this.email = email;\r\n        this.tel = skype;\r\n        this.balance = Number(balance).round(3);\r\n        this.spent = Number(spent).round(3);\r\n        this.status = status;\r\n        this.created = moment(created).unix();\r\n        this.lAuth = moment(lastAuth).unix()\r\n    }\r\n  }\r\n  \r\n  export default User;\r\n  \r\n  Number.prototype.round = function (places) {\r\n    return +(Math.round(this + \"e+\" + places) + \"e-\" + places);\r\n};",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":17},{"ruleId":"177","severity":1,"message":"181","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":9,"column":12,"nodeType":"179","messageId":"180","endLine":9,"endColumn":22},{"ruleId":"177","severity":1,"message":"183","line":9,"column":24,"nodeType":"179","messageId":"180","endLine":9,"endColumn":37},{"ruleId":"177","severity":1,"message":"184","line":17,"column":11,"nodeType":"179","messageId":"180","endLine":17,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":86,"column":41,"nodeType":"187","endLine":86,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":86,"column":49,"nodeType":"190","messageId":"191","endLine":86,"endColumn":70},{"ruleId":"185","severity":1,"message":"186","line":95,"column":41,"nodeType":"187","endLine":95,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":95,"column":49,"nodeType":"190","messageId":"191","endLine":95,"endColumn":70},{"ruleId":"185","severity":1,"message":"186","line":104,"column":41,"nodeType":"187","endLine":104,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":104,"column":49,"nodeType":"190","messageId":"191","endLine":104,"endColumn":70},{"ruleId":"185","severity":1,"message":"186","line":112,"column":41,"nodeType":"187","endLine":112,"endColumn":106},{"ruleId":"188","severity":1,"message":"189","line":112,"column":58,"nodeType":"190","messageId":"191","endLine":112,"endColumn":79},{"ruleId":"177","severity":1,"message":"192","line":1,"column":38,"nodeType":"179","messageId":"180","endLine":1,"endColumn":44},{"ruleId":"177","severity":1,"message":"193","line":13,"column":15,"nodeType":"179","messageId":"180","endLine":13,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":61,"column":6,"nodeType":"196","endLine":61,"endColumn":30,"suggestions":"197"},{"ruleId":"177","severity":1,"message":"193","line":14,"column":15,"nodeType":"179","messageId":"180","endLine":14,"endColumn":18},{"ruleId":"177","severity":1,"message":"198","line":16,"column":10,"nodeType":"179","messageId":"180","endLine":16,"endColumn":17},{"ruleId":"194","severity":1,"message":"199","line":32,"column":19,"nodeType":"200","endLine":32,"endColumn":32},{"ruleId":"177","severity":1,"message":"193","line":11,"column":15,"nodeType":"179","messageId":"180","endLine":11,"endColumn":18},{"ruleId":"194","severity":1,"message":"199","line":21,"column":19,"nodeType":"200","endLine":21,"endColumn":32},{"ruleId":"177","severity":1,"message":"181","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"201","line":16,"column":7,"nodeType":"179","messageId":"180","endLine":16,"endColumn":14},{"ruleId":"177","severity":1,"message":"202","line":20,"column":10,"nodeType":"179","messageId":"180","endLine":20,"endColumn":28},{"ruleId":"203","severity":1,"message":"204","line":61,"column":28,"nodeType":"205","messageId":"206","endLine":61,"endColumn":30},{"ruleId":"194","severity":1,"message":"207","line":93,"column":6,"nodeType":"196","endLine":93,"endColumn":20,"suggestions":"208"},{"ruleId":"194","severity":1,"message":"199","line":120,"column":28,"nodeType":"200","endLine":120,"endColumn":41},{"ruleId":"194","severity":1,"message":"199","line":151,"column":27,"nodeType":"200","endLine":151,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":52,"column":100,"nodeType":"205","messageId":"206","endLine":52,"endColumn":102},{"ruleId":"203","severity":1,"message":"209","line":53,"column":45,"nodeType":"205","messageId":"206","endLine":53,"endColumn":47},{"ruleId":"194","severity":1,"message":"210","line":95,"column":4,"nodeType":"196","endLine":95,"endColumn":18,"suggestions":"211"},{"ruleId":"177","severity":1,"message":"212","line":208,"column":9,"nodeType":"179","messageId":"180","endLine":208,"endColumn":33},{"ruleId":"177","severity":1,"message":"213","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":13},{"ruleId":"177","severity":1,"message":"214","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":57,"column":9,"nodeType":"217","messageId":"218","endLine":57,"endColumn":21},{"ruleId":"194","severity":1,"message":"219","line":68,"column":6,"nodeType":"196","endLine":68,"endColumn":37,"suggestions":"220"},{"ruleId":"203","severity":1,"message":"204","line":274,"column":26,"nodeType":"205","messageId":"206","endLine":274,"endColumn":28},{"ruleId":"203","severity":1,"message":"204","line":277,"column":33,"nodeType":"205","messageId":"206","endLine":277,"endColumn":35},{"ruleId":"221","severity":1,"message":"222","line":34,"column":40,"nodeType":"223","messageId":"224","endLine":34,"endColumn":42},{"ruleId":"225","severity":1,"message":"226","line":60,"column":20,"nodeType":"227","messageId":"228","endLine":60,"endColumn":28,"fix":"229"},{"ruleId":"203","severity":1,"message":"204","line":92,"column":38,"nodeType":"205","messageId":"206","endLine":92,"endColumn":40},{"ruleId":"194","severity":1,"message":"199","line":16,"column":19,"nodeType":"200","endLine":16,"endColumn":32},{"ruleId":"203","severity":1,"message":"204","line":38,"column":25,"nodeType":"205","messageId":"206","endLine":38,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":40,"column":30,"nodeType":"205","messageId":"206","endLine":40,"endColumn":32},{"ruleId":"203","severity":1,"message":"204","line":42,"column":30,"nodeType":"205","messageId":"206","endLine":42,"endColumn":32},{"ruleId":"203","severity":1,"message":"204","line":44,"column":30,"nodeType":"205","messageId":"206","endLine":44,"endColumn":32},{"ruleId":"173","replacedBy":"230"},{"ruleId":"175","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":41,"column":1,"nodeType":"234","messageId":"206","endLine":43,"endColumn":2},{"ruleId":"232","severity":1,"message":"233","line":31,"column":1,"nodeType":"234","messageId":"206","endLine":33,"endColumn":2},{"ruleId":"232","severity":1,"message":"233","line":29,"column":3,"nodeType":"234","messageId":"206","endLine":31,"endColumn":2},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'Datatable' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'userSpents' is assigned a value but never used.","'setUserSpents' is assigned a value but never used.","'columns' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'useRef' is defined but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filteredUsers' and 'getUsers'. Either include them or remove the dependency array.","ArrayExpression",["237"],"'pending' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'history' is assigned a value but never used.","'allOrdersOfService' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["238"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'getUserDetails' and 'selectedUserDetails'. Either include them or remove the dependency array.",["239"],"'ChartTotalUsagesTimeAxis' is assigned a value but never used.","'Chart' is defined but never used.","'ApexCharts' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has a missing dependency: 'getPayments'. Either include it or remove the dependency array.",["240"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"241","text":"242"},["235"],["236"],"no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},[2508,2508],"()","Update the dependencies array to be: [filteredUsers, getUsers, selectedUser, tagValue]",{"range":"251","text":"252"},"Update the dependencies array to be: [getOrders, selectedDate]",{"range":"253","text":"254"},"Update the dependencies array to be: [getUserDetails, selectedDate, selectedUserDetails]",{"range":"255","text":"256"},"Update the dependencies array to be: [getPayments, selectedDate, selectedPayment]",{"range":"257","text":"258"},[1810,1834],"[filteredUsers, getUsers, selectedUser, tagValue]",[3254,3268],"[getOrders, selectedDate]",[3495,3509],"[getUserDetails, selectedDate, selectedUserDetails]",[2438,2469],"[getPayments, selectedDate, selectedPayment]"]